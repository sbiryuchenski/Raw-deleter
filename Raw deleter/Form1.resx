<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="FolderChecker.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FEVRFOUvmv8DdS1LC21rHM0AAAAASUVORK5CYII=
</value>
  </data>
</root>